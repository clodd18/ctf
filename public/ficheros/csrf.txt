La falsificación de solicitud entre sitios (CSRF o XSRF) es una vulnerabilidad en la que un atacante engaña a una víctima para que realice una solicitud que la víctima no tenía la intención de realizar. Por lo tanto, con CSRF, un atacante abusa de la confianza que una aplicación web tiene con el navegador de la víctima.
En un ataque CSRF exitoso, el atacante hace que el usuario víctima realice una acción sin querer. Por ejemplo, esto podría ser cambiar la dirección de correo electrónico en su cuenta, cambiar su contraseña o realizar una transferencia de fondos. Según la naturaleza de la acción, el atacante podría obtener el control total de la cuenta del usuario. Si el usuario comprometido tiene un rol privilegiado dentro de la aplicación, entonces el atacante podría tomar el control total de todos los datos y la funcionalidad de la aplicación.
Para que un ataque CSRF sea posible, deben darse tres condiciones clave:
-	Una acción relevante. Hay una acción dentro de la aplicación que el atacante tiene una razón para inducir. Esto podría ser una acción privilegiada (como modificar los permisos de otros usuarios) o cualquier acción sobre datos específicos del usuario (como cambiar la contraseña del usuario).
-	Manejo de sesión basado en cookies. Realizar la acción implica emitir una o más solicitudes HTTP, y la aplicación se basa únicamente en las cookies de sesión para identificar al usuario que realizó las solicitudes. No existe ningún otro mecanismo para realizar un seguimiento de las sesiones o validar las solicitudes de los usuarios.
-	Sin parámetros de solicitud impredecibles. Las solicitudes que realizan la acción no contienen ningún parámetro cuyos valores el atacante no pueda determinar o adivinar. Por ejemplo, al hacer que un usuario cambie su contraseña, la función no es vulnerable si un atacante necesita saber el valor de la contraseña existente.
La técnica recomendada y más utilizada para prevenir ataques CSRF se conoce como token anti-CSRF, también conocido como token sincronizador. Las características de un sistema anti-CSRF bien diseñado involucran los siguientes atributos.
-	El token anti-CSRF debe ser único para cada sesión de usuario.
-	La sesión debería caducar automáticamente después de un período de tiempo adecuado.
-	El token anti-CSRF debe ser un valor criptográficamente aleatorio de longitud significativa.
-	El token anti-CSRF debe ser criptográficamente seguro, es decir, debe generarse mediante un potente algoritmo generador de números pseudoaleatorios (PRNG).
-	El token anti-CSRF se agrega como un campo oculto para los formularios o dentro de las URL (solo es necesario si las solicitudes GET provocan cambios de estado, es decir, las solicitudes GET no son idempotentes).
-	El servidor debe rechazar la acción solicitada si el token anti-CSRF falla en la validación.
Cuando un usuario envía un formulario o realiza alguna otra solicitud autenticada que requiere una Cookie, el token anti-CSRF debe incluirse en la solicitud. Luego, la aplicación web verificará la existencia y corrección de este token antes de procesar la solicitud. Si falta el token o es incorrecto, se puede rechazar la solicitud. Este es precisamente el mecanismo que Laravel implementa por defecto en todos sus formularios y hay que desactivarlo a propósito en caso de no querer utilizarlo. O en su defecto, añadir las paginas de destino a una lista de excepciones en las que no se tendrá en cuenta el uso del token.
