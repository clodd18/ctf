Un ataque de fuerza bruta es un tipo de ataque que tiene como objetivo el descubrir una contraseña, un nombre de usuario, una página web oculta o una clave de cifrado. El método utilizado para esto consiste en aplicar multitud de alternativas hasta encontrar con una que resulte correcta. Principalmente se usa para descubrir contraseñas y claves de cifrado, las otras dos opciones son mucho menos usadas.
Dependiendo del tamaño y la complejidad de la contraseña, este proceso puede tardar desde solo unos segundos, hasta varios cientos de miles de años. Cuantos más caracteres distintos hay para elegir en cada carácter de la contraseña, más compleja es esta y por tanto más opciones hay que probar por cada carácter a descubrir, pero cuanto más larga es la contraseña, la complejidad para descubrir dicha contraseña aumenta de manera exponencial al número de caracteres de longitud que tiene dicha contraseña. Esto hace pensar que sería muy seguro hacer una contraseña o un hash de encriptación de muchos miles de caracteres, pero hay que tener en cuenta que, por un lado, recordar una contraseña de usuario de muchos caracteres es muy difícil si no se guarda en un sitio, lo cual hace que se reduzca inmediatamente la fiabilidad de dicha contraseña; o, si se usa una clave de encriptado de muchos miles de caracteres tenemos el problema del rendimiento para poder encriptar y desencriptar dichas contraseñas o encontrar números primos (en lo cual está basado en su mayoría el sistema criptográfico actual) con los suficientes caracteres como para poder hacer viable el sistema.
Para poder resolver el problema de encontrar una contraseña o clave de desencriptado si tener que introducir una a una todas las palabras que se nos ocurran, se han creado herramientas para agilizar dicha tarea.
La más básica de estas herramientas es el diccionario de palabras. Esto es uno o varios ficheros con cientos de miles o incluso millones de palabras que alguien que intente descubrir la contraseña asociada a un usuario utilizará en un ataque contra un formulario en el que, en combinación de un nombre de usuario, intentará todas las combinaciones posibles hasta dar con la correcta combinación. A esto se le denomina Ataques de diccionario.
Existen una gran cantidad de aplicaciones que permiten automatizar el proceso de ataque de fuerza bruta, algunas de ellas son Medusa, THC Hydra, Brutus, John The Ripper, Rainbow. Muchas de ellas las podemos encontrar en distribuciones de Linux especialmente preparadas para hacer pruebas de penetración. Estas herramientas se ejecutan contra alguno de los protocolos más utilizado en internet como FTP, MySQL, Telnet o sobre una misma página web.
Existe una última herramienta muy especializada llamada tablas Rainbow y que no es más que unos ficheros enormes en los que se han ido calculando previamente salidas para determinadas entradas a las más famosas funciones de hash, para de esta forma, si ya existe precalculado un hash y se sabe que pertenece a una determinada palabra, ya tendríamos desencriptada esa palabra sin tener que usar la fuerza bruta. El motivo de que esta herramienta esté aquí mencionada es que las tabla se crea precisamente por fuerza bruta, calculando el hash de tas las posibles combinaciones de letras, números y caracteres especiales para una determinada función.
En la actualidad existe tal complejidad de contraseñas y de encriptado de estas que el uso de solamente la CPU ya no es suficiente para los cálculos, por lo que actualmente se está usando la potencia matemática que ofrecen los miles de pequeños núcleos matemáticos que incluyen lo chips gráficos GPU para multiplicar por más de 200 el rendimiento de una única CPU y poder descifrar mucho más rápido. Eso unido a la capacidad de poner varias maquina en paralelo a trabajar, hace que cualquier ataque en la actualidad sea factible, solo es cuestión de potencia y de tiempo, aunque puede que este último sea mayor que el que estamos dispuestos a esperar.
¿Como se pueden evitar este tipo de ataques? La respuesta principal es una buena concienciación de los usuarios a la hora de elegir sus contraseñas, deben ser largas y lo suficientemente complejas, es más que suficiente entre 10 y 12 caracteres que incluyan números, letras mayúsculas y minúsculas y algún símbolo especial. Esto puede hacer que el descifrar esta contraseña por una única máquina, aun usando una GPU pueda tardar más de 100 años en ser desencriptada.
Por otro lado, los administradores y programadores deben también poner de su parte, obligar al sistema a usar este tipo de contraseñas e imponer una política de intentos antes de bloquear la cuenta o de obligar al usuario a demostrar que es una persona a través del uso que un CAPTCHA, que es un sistema de pregunta y respuesta que pretende simular un test para identificar si el usuario es humano. Otro método que pueden usar los administradores es guardar las contraseñas encriptadas y si quieres evitar el uso de tablas Rainbow, también pueden aplicar un sal al has, que no es más que añadir una cadena de texto predeterminada por el sistema a todas las contraseñas antes de calcular el hash.
Por su parte Laravel incluye para evitar este tipo de ataques a dos herramientas que trabajan en conjunto. Por un lado, tenemos a Laravel Fortify, una implementación de backend de autenticación agnóstica de frontend para Laravel. Fortify registra las rutas y los controladores necesarios para implementar todas las funciones de autenticación de Laravel, incluido el inicio de sesión, el registro, el restablecimiento de contraseña, la verificación de correo electrónico y más. Por otro lado, tenemos a Laravel Sanctum que se ocupa de administrar tokens de API y autenticar a los usuarios existentes mediante tokens o cookies de sesión.
