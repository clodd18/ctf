La inyección de comandos es una vulnerabilidad que permite al atacante ejecutar comandos directamente en el sistema operativo en el que se ejecuta una aplicación web. Existen algunos sitios web en los que permiten al usuario enviar comandos a través de una entrada o que la entrada en si sea un parámetro de dicho comando que se ejecuta internamente. Sin los debidos controles sobre los parámetros de entrada, se podrían ejecutar comandos más allá de la intención de la propia aplicación web y del programador que la desarrolló.
Al explotar estas vulnerabilidades, los atacantes pueden generar un gran numero de riesgos para nuestro sistema, algunos de ellos son los siguientes:
-	Robo de credenciales de los usuarios o del sistema en donde se ejecuta la aplicación.
-	Dejar temporalmente sin servicio al servidor o las conexiones que los desarrolladores y personal de mantenimiento utilizan para conectar con el servidor (SSH o Terminal Server)
-	Dejar aplicaciones maliciosas en el servidor, ya sea de manera visible u oculta.
-	Hacer modificaciones sobre la aplicación que se está ejecutando o sobre cualquier a la que el atacante pueda acceder.
La peor de las situaciones sería que el atacante lograra ejecutar ciertos comandos que hicieran que se convirtiera en usuario administrador y obtuviera un control total sobre el sistema.
Un ejemplo muy simple a la hora de ilustrar una vulnerabilidad de inyección de comandos, sería una web que pide una dirección sobre la que hacer un ping en el sistema. Si el programador que implementa esta página, ejecuta directamente la instrucción ping con la ip que viene en el parámetro anterior a través de una instrucción de PHP llamada Shell_exec(). Se ejecutaría el ping directamente sin aplicar ningún filtro, y como Shell_exec() ejecuta toda instrucción que se le pase como parámetro, si un atacante quisiera añadir cualquier otra instrucción después del ping a través del típico pipeline ( | ) para separar comandos del sistema operativo, es muy probable que logre ejecutar dicha instrucción.
Es muy importante que los desarrolladores tengan muy en cuenta esta vulnerabilidad a la hora de diseñar una aplicación e intentar evitar el uso directo de ejecuciones de comandos con parámetros que provengan de un formulario. En caso de no ser posible evitarlo, lo que si se debe hacer es sanear la entrada mediante comprobaciones, evitar caracteres especiales, sobre todo los símbolos & y | que son muy usados en la sintaxis tanto de Linux como de Windows para concatenar instrucciones. Y la más importante de todas las precauciones, jamás ejecutar tu aplicación con privilegios de administrador, no es necesario facilitar el trabajo a los atacantes.
