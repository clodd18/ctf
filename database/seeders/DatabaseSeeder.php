<?php

namespace Database\Seeders;

// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     *
     * @return void
     */
    public function run()
    {
        //Crear cuestionarios
        DB::table('cuestionarios')->insert(['nombre' => "Inyección de SQL",],);
        DB::table('cuestionarios')->insert(['nombre' => "Inyección de Comandos",]);
        DB::table('cuestionarios')->insert(['nombre' => "Inyección de Código",]);
        DB::table('cuestionarios')->insert(['nombre' => "XSS",]);
        DB::table('cuestionarios')->insert(['nombre' => "CSRF",]);
        DB::table('cuestionarios')->insert(['nombre' => "Fuerza bruta",]);

        //Crear preguntas de las cuestionarios
        DB::table('preguntas')->insert(['pregunta' => "¿Qué es una inyección de SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 1]);
        DB::table('preguntas')->insert(['pregunta' => "¿A que parametros afectan las Inyecciones SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 8]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál no es un tipo de Inyecccion SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 11]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál es el payload mas basico y el primero que se recomienda usar para buscar una vulnerabilidad de inyección de SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 14]);
        DB::table('preguntas')->insert(['pregunta' => "La funcion USER() es para obtener el usurio activo en la base de datos, pero ¿DBMS?", 'cuestionario_id' => 1, 'respuesta_id' => 19]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál es el principal motivo de una inyección SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 21]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo puede evitarse la inyección de SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 26]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué herramienta usarias para detectar y explotar una inyección de SQL?", 'cuestionario_id' => 1, 'respuesta_id' => 30]);
        DB::table('preguntas')->insert(['pregunta' => "¿Las inyecciones basadas en tiempo son un tipo particular de inyección SQL de que tipo?", 'cuestionario_id' => 1, 'respuesta_id' => 35]);
        DB::table('preguntas')->insert(['pregunta' => "¿Para que usarias este payload? UNION ALL SELECT LOAD_FILE('/etc/passwd')", 'cuestionario_id' => 1, 'respuesta_id' => 37]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué es una inyección de comandos?", 'cuestionario_id' => 2, 'respuesta_id' => 41]);
        DB::table('preguntas')->insert(['pregunta' => "¿A que parametros afectan las Inyecciones SQL?", 'cuestionario_id' => 2, 'respuesta_id' => 48]);
        DB::table('preguntas')->insert(['pregunta' => "Si tubieras esta instrucción y quisieras listar el fichero de contraseñas de linux, ¿Qué payload usarías?
                                                       \\n system(\"rm '\$file'\");", 'cuestionario_id' => 2, 'respuesta_id' => 50]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo intentarias detectar una posible inyección de comandos si no obtuvieras ningun resultado visible?", 'cuestionario_id' => 2, 'respuesta_id' => 55]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo puede evitarse la inyección de comandos de sistema operativo?", 'cuestionario_id' => 2, 'respuesta_id' => 57]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué tipo de caracteres deberiamos filtrar en la entrada de parametros?", 'cuestionario_id' => 2, 'respuesta_id' => 64]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál de estas no es una buena practica para evitar la inyección de comandos?", 'cuestionario_id' => 2, 'respuesta_id' => 68]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál es el primer paso antes de proseguir con una inyección de codigo?", 'cuestionario_id' => 2, 'respuesta_id' => 70]);
        DB::table('preguntas')->insert(['pregunta' => "Dado el siguietne código ¿Cómo sabrias el usuario con el que estamos trabajando?
                                                        \$target = \$_GET['ip'];
                                                        \$shell = shell_exec ('ping -c 3 '.\$target);", 'cuestionario_id' => 2, 'respuesta_id' => 74]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué herramienta proporcionan los lenguajes de programación modernos para evitar la inyección de comandos?", 'cuestionario_id' => 2, 'respuesta_id' => 77]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué es una inyección de código?", 'cuestionario_id' => 3, 'respuesta_id' => 82]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo puede evitarse la inyección de comandos de sistema operativo?", 'cuestionario_id' => 3, 'respuesta_id' => 88]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo se denomina al hecho de aprovecharse de una inyección de codigo para ejecutar condigo PHP y que este acabe ejecutando instrucciones del sistema operativo?", 'cuestionario_id' => 3, 'respuesta_id' => 90]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué limita el impacto de una inyección de código?", 'cuestionario_id' => 3, 'respuesta_id' => 96]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué parametros son mas susceptibles de ser vulnerables a la inyección de código?", 'cuestionario_id' => 3, 'respuesta_id' => 97]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál de las siguientes funciones podria insertarse en una inyección de codigo PHP para ejecutar una instrucción del sistema operativo?", 'cuestionario_id' => 3, 'respuesta_id' => 104]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué mal podría provocar la incusion de una linea de codigo como esta en nuestro codigo php?
                                                        include (\$GET[\"action\"])", 'cuestionario_id' => 3, 'respuesta_id' => 106]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué mecanismos de validacion de parametros podemos usar para evitar la inyección de codigo?", 'cuestionario_id' => 3, 'respuesta_id' => 112]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué payload usariamos en PHP para verificar que puede hacerse una inyección de codigo?", 'cuestionario_id' => 3, 'respuesta_id' => 113]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué funciones de PHP se deben evitar en programacion web para evitar la inyección de codigo?", 'cuestionario_id' => 3, 'respuesta_id' => 120]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué es XSS (Cross Site Scripting)?", 'cuestionario_id' => 4, 'respuesta_id' => 123]);
        DB::table('preguntas')->insert(['pregunta' => "¿Las vulnerabilidades de tipo  XSS en donde se dan?", 'cuestionario_id' => 4, 'respuesta_id' => 125]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué tipos de ataques se puede aprovechar de una vulnerabilidad de XSS?", 'cuestionario_id' => 4, 'respuesta_id' => 132]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué caracteriza una explotacion de vulnerabilidad XSS?", 'cuestionario_id' => 4, 'respuesta_id' => 136]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué herrameinta es la mas usada para explotar una vulnerabilidad de tipo XSS?", 'cuestionario_id' => 4, 'respuesta_id' => 138]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál no es un tipo de XSS?", 'cuestionario_id' => 4, 'respuesta_id' => 143]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué nos permite averiguar el uso de este payload?
                                                        >”’><script>alert(‘aaaaaa’)</script>", 'cuestionario_id' => 4, 'respuesta_id' => 148]);
        DB::table('preguntas')->insert(['pregunta' => "¿En que puntos del codigo HTML puede hacerse una inyecion de codigo para explotar la vulnerabilidad XSS?", 'cuestionario_id' => 4, 'respuesta_id' => 152]);
        DB::table('preguntas')->insert(['pregunta' => "¿En que otro punto se puede aprovechar el XSS en codigo HTML?", 'cuestionario_id' => 4, 'respuesta_id' => 156]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué utilidad nos aporta Laravel para evitar parte de los ataques XSS?", 'cuestionario_id' => 4, 'respuesta_id' => 157]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué es CSRF (Cross-site Request Forgery)?", 'cuestionario_id' => 5, 'respuesta_id' => 163]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué elemento es necesario para poder llevar a cabo un ataque CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 168]);
        DB::table('preguntas')->insert(['pregunta' => "¿Por qué ocurren los ataques de CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 170]);
        DB::table('preguntas')->insert(['pregunta' => "¿A que parametros no afecta una vulnerabilidad CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 175]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué herramienta es la mas utilizda para prevenir los ataques CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 178]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo evita Laravel que el programador cometa un fallo y su web sea vulnerable a CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 182]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál no es una buena practica pr parte del usuario a la hora de prevenir un CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 188]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cómo detectarias una vulnerabilidad de CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 189]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué otras medidas de seguridad se puede aportar para evitar el CSRF para mantern seguro al usuario?", 'cuestionario_id' => 5, 'respuesta_id' => 194]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál es el mecanismo de ataque mas común para aprovechar una vulnerabilidad de CSRF?", 'cuestionario_id' => 5, 'respuesta_id' => 197]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué es un ataque de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 204]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál es el metodo mas sencillo para evitar un ataque de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 208]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cual es la herramienta basica para un ataque de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 209]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué herramientas pueden ser utiles para un ataque de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 216]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué elemento de hardware se puede mejorar en un equipo para mejorar el rendimiento de un ataque de fuerza bruta en la actualidad?", 'cuestionario_id' => 6, 'respuesta_id' => 218]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué se puede hacer para fortalecer la contraseña de un usuario?", 'cuestionario_id' => 6, 'respuesta_id' => 224]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué se puede hacer de cara al servidor para dificultar que los ataque de fuerza bruta tengan éxito?", 'cuestionario_id' => 6, 'respuesta_id' => 228]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál de los siguiente no es un tipo de ataque de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 232]);
        DB::table('preguntas')->insert(['pregunta' => "¿Qué herramienta aporta Laravel para proteger de los ataques de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 234]);
        DB::table('preguntas')->insert(['pregunta' => "¿Cuál no es una herramienta para hacer ataques de fuerza bruta?", 'cuestionario_id' => 6, 'respuesta_id' => 239]);

        //Respuestas para las preguntas
        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque a una aplicación web que permite a un atacante insertar sentencias SQL maliciosas en la aplicación web", 'pregunta_id' => 1]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante inyectar y ejecutar comandos directamente en el sistema operativo en el que se ejecuta tu aplicación.", 'pregunta_id' => 1]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante insertar scripts o secuencias de código malicioso en el navegador web de un usuario.", 'pregunta_id' => 1]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre cuando el atacante emplea determinadas técnicas para probar combinaciones de contraseñas con el objetivo de descubrir las credenciales de una potencial víctima y así lograr acceso a una cuenta o sistema.", 'pregunta_id' => 1]);
        DB::table('respuestas')->insert(['respuesta' => "Confidencialidad", 'pregunta_id' => 2]);
        DB::table('respuestas')->insert(['respuesta' => "Integridad", 'pregunta_id' => 2]);
        DB::table('respuestas')->insert(['respuesta' => "Disponibilidad", 'pregunta_id' => 2]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las anteriores", 'pregunta_id' => 2]);
        DB::table('respuestas')->insert(['respuesta' => "Basadas en sentencias Union", 'pregunta_id' => 3]);
        DB::table('respuestas')->insert(['respuesta' => "Inyecciones ciegas", 'pregunta_id' => 3]);
        DB::table('respuestas')->insert(['respuesta' => "Basadas en algo que se sabe", 'pregunta_id' => 3]);
        DB::table('respuestas')->insert(['respuesta' => "Basadas en tiempo", 'pregunta_id' => 3]);
        DB::table('respuestas')->insert(['respuesta' => "El carácter 1", 'pregunta_id' => 4]);
        DB::table('respuestas')->insert(['respuesta' => "La comilla simple", 'pregunta_id' => 4]);
        DB::table('respuestas')->insert(['respuesta' => "El simbolo %", 'pregunta_id' => 4]);
        DB::table('respuestas')->insert(['respuesta' => "la clausula AND", 'pregunta_id' => 4]);
        DB::table('respuestas')->insert(['respuesta' => "Microsoft SQL", 'pregunta_id' => 5]);
        DB::table('respuestas')->insert(['respuesta' => "Oracle", 'pregunta_id' => 5]);
        DB::table('respuestas')->insert(['respuesta' => "MySQL", 'pregunta_id' => 5]);
        DB::table('respuestas')->insert(['respuesta' => "Sirve para todas las DBMS", 'pregunta_id' => 5]);
        DB::table('respuestas')->insert(['respuesta' => "Error de programacion", 'pregunta_id' => 6]);
        DB::table('respuestas')->insert(['respuesta' => "Error del servidor fisico", 'pregunta_id' => 6]);
        DB::table('respuestas')->insert(['respuesta' => "Error de la base de datos", 'pregunta_id' => 6]);
        DB::table('respuestas')->insert(['respuesta' => "Error del usuario", 'pregunta_id' => 6]);
        DB::table('respuestas')->insert(['respuesta' => "Instalando una mejor version de la base de datos", 'pregunta_id' => 7]);
        DB::table('respuestas')->insert(['respuesta' => "Validando los campos de los formularios", 'pregunta_id' => 7]);
        DB::table('respuestas')->insert(['respuesta' => "Actualizando el servidor", 'pregunta_id' => 7]);
        DB::table('respuestas')->insert(['respuesta' => "Cambiar el framework de programacion", 'pregunta_id' => 7]);
        DB::table('respuestas')->insert(['respuesta' => "HeidiSQL", 'pregunta_id' => 8]);
        DB::table('respuestas')->insert(['respuesta' => "sqlmap", 'pregunta_id' => 8]);
        DB::table('respuestas')->insert(['respuesta' => "MariaDB", 'pregunta_id' => 8]);
        DB::table('respuestas')->insert(['respuesta' => "SQLGrease", 'pregunta_id' => 8]);
        DB::table('respuestas')->insert(['respuesta' => "Basadas en error", 'pregunta_id' => 9]);
        DB::table('respuestas')->insert(['respuesta' => "Basadas en sentencias tipo union", 'pregunta_id' => 9]);
        DB::table('respuestas')->insert(['respuesta' => "De tipo ciegas", 'pregunta_id' => 9]);
        DB::table('respuestas')->insert(['respuesta' => "De ninguna de ellas", 'pregunta_id' => 9]);
        DB::table('respuestas')->insert(['respuesta' => "En una inyección de tipo union", 'pregunta_id' => 10]);
        DB::table('respuestas')->insert(['respuesta' => "En una inyección ciega para obtener el contenido del fichero passwd", 'pregunta_id' => 10]);
        DB::table('respuestas')->insert(['respuesta' => "En una inyección basada en error", 'pregunta_id' => 10]);
        DB::table('respuestas')->insert(['respuesta' => "Ese payload no tiene utilidad", 'pregunta_id' => 10]);

        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante inyectar y ejecutar comandos directamente en el sistema operativo en el que se ejecuta tu aplicación.", 'pregunta_id' => 11]);
        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque que permite al atacante inyectar código fuente en la aplicación de forma que es interpretado y ejecutado.", 'pregunta_id' => 11]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre cuando el atacante emplea determinadas técnicas para probar combinaciones de contraseñas con el objetivo de descubrir las credenciales de una potencial víctima y así lograr acceso a una cuenta o sistema.", 'pregunta_id' => 11]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre en aplicaciones web y le permite a un atacante inducir a los usuarios a realizar acciones que no pretenden realizar", 'pregunta_id' => 11]);
        DB::table('respuestas')->insert(['respuesta' => "Integridad", 'pregunta_id' => 12]);
        DB::table('respuestas')->insert(['respuesta' => "Disponibilidad", 'pregunta_id' => 12]);
        DB::table('respuestas')->insert(['respuesta' => "Confidencialidad", 'pregunta_id' => 12]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las anteriores", 'pregunta_id' => 12]);
        DB::table('respuestas')->insert(['respuesta' => "tmp.txt ; cat /etc/passwd", 'pregunta_id' => 13]);
        DB::table('respuestas')->insert(['respuesta' => "tmp.txt' ; cat /etc/Passwd'", 'pregunta_id' => 13]);
        DB::table('respuestas')->insert(['respuesta' => "tmp.txt ; cat /etc/passwd", 'pregunta_id' => 13]);
        DB::table('respuestas')->insert(['respuesta' => "tmp.txt' ; cat /etc/Passwd'", 'pregunta_id' => 13]);
        DB::table('respuestas')->insert(['respuesta' => "Intentando una pruba de tiempo, como sleep", 'pregunta_id' => 14]);
        DB::table('respuestas')->insert(['respuesta' => "Intentando un ping a una maquina en la que tengamos un sniffer", 'pregunta_id' => 14]);
        DB::table('respuestas')->insert(['respuesta' => "Ambas serian posible", 'pregunta_id' => 14]);
        DB::table('respuestas')->insert(['respuesta' => "Ninguan de las respuesta anteriores", 'pregunta_id' => 14]);
        DB::table('respuestas')->insert(['respuesta' => "Validando los datos que se cargan", 'pregunta_id' => 15]);
        DB::table('respuestas')->insert(['respuesta' => "Cambiar el framework de programacion", 'pregunta_id' => 15]);
        DB::table('respuestas')->insert(['respuesta' => "Instalando una mejor version de la base de datos", 'pregunta_id' => 15]);
        DB::table('respuestas')->insert(['respuesta' => "Actualizando el servidor", 'pregunta_id' => 15]);
        DB::table('respuestas')->insert(['respuesta' => "Caracteres tipo AND, & &&", 'pregunta_id' => 16]);
        DB::table('respuestas')->insert(['respuesta' => "Caracteres tipo OR | ||", 'pregunta_id' => 16]);
        DB::table('respuestas')->insert(['respuesta' => "Caracteres de fin de instrucción ;", 'pregunta_id' => 16]);
        DB::table('respuestas')->insert(['respuesta' => "Todos ellos son peligrosos y vulnerables", 'pregunta_id' => 16]);
        DB::table('respuestas')->insert(['respuesta' => "Implementar filtros de entrada", 'pregunta_id' => 17]);
        DB::table('respuestas')->insert(['respuesta' => "Evitar el uso de llamadas al sistema", 'pregunta_id' => 17]);
        DB::table('respuestas')->insert(['respuesta' => "Usar un usuario para el servidor web con privilegios basicos", 'pregunta_id' => 17]);
        DB::table('respuestas')->insert(['respuesta' => "Usar un usuario para el servidor web con privilegios de administrador", 'pregunta_id' => 17]);
        DB::table('respuestas')->insert(['respuesta' => "Identificar la maquina en la que estamos", 'pregunta_id' => 18]);
        DB::table('respuestas')->insert(['respuesta' => "Identificar el tipo de sistema operativo", 'pregunta_id' => 18]);
        DB::table('respuestas')->insert(['respuesta' => "Identificar el con el que estamos trabajando", 'pregunta_id' => 18]);
        DB::table('respuestas')->insert(['respuesta' => "Conseguir las contraseñas del sistema", 'pregunta_id' => 18]);
        DB::table('respuestas')->insert(['respuesta' => "127.0.0.1 | user()", 'pregunta_id' => 19]);
        DB::table('respuestas')->insert(['respuesta' => "127.0.0.1 | whoami", 'pregunta_id' => 19]);
        DB::table('respuestas')->insert(['respuesta' => "127.0.0.1 | cat /etc/passwd", 'pregunta_id' => 19]);
        DB::table('respuestas')->insert(['respuesta' => "127.0.0.1 | ls", 'pregunta_id' => 19]);
        DB::table('respuestas')->insert(['respuesta' => "API especifica para comunicarse con el sistema", 'pregunta_id' => 20]);
        DB::table('respuestas')->insert(['respuesta' => "La funcion System()", 'pregunta_id' => 20]);
        DB::table('respuestas')->insert(['respuesta' => "La funcion shell_exec()", 'pregunta_id' => 20]);
        DB::table('respuestas')->insert(['respuesta' => "No existe tal funcionalidad", 'pregunta_id' => 20]);

        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante inyectar y ejecutar comandos directamente en el sistema operativo en el que se ejecuta tu aplicación.", 'pregunta_id' => 21]);
        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque que permite al atacante inyectar código fuente en la aplicación de forma que es interpretado y ejecutado.", 'pregunta_id' => 21]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante insertar scripts o secuencias de código malicioso en el navegador web de un usuario.", 'pregunta_id' => 21]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre cuando el atacante emplea determinadas técnicas para probar combinaciones de contraseñas con el objetivo de descubrir las credenciales de una potencial víctima y así lograr acceso a una cuenta o sistema.", 'pregunta_id' => 21]);
        DB::table('respuestas')->insert(['respuesta' => "Cambiar el framework de programacion", 'pregunta_id' => 22]);
        DB::table('respuestas')->insert(['respuesta' => "Instalando una mejor version de la base de datos", 'pregunta_id' => 22]);
        DB::table('respuestas')->insert(['respuesta' => "Actualizando el servidor", 'pregunta_id' => 22]);
        DB::table('respuestas')->insert(['respuesta' => "Validando los campos de los formularios", 'pregunta_id' => 22]);
        DB::table('respuestas')->insert(['respuesta' => "Powershell", 'pregunta_id' => 23]);
        DB::table('respuestas')->insert(['respuesta' => "Webshell", 'pregunta_id' => 23]);
        DB::table('respuestas')->insert(['respuesta' => "Inyección de comandos", 'pregunta_id' => 23]);
        DB::table('respuestas')->insert(['respuesta' => "Shell", 'pregunta_id' => 23]);
        DB::table('respuestas')->insert(['respuesta' => "La capacidad del lenguaje de programacion para comunicarse con el sistema", 'pregunta_id' => 24]);
        DB::table('respuestas')->insert(['respuesta' => "Los permisos del usuario que ejecuta el servidr web", 'pregunta_id' => 24]);
        DB::table('respuestas')->insert(['respuesta' => "Ninguna es correcta", 'pregunta_id' => 24]);
        DB::table('respuestas')->insert(['respuesta' => "A y B son correctas", 'pregunta_id' => 24]);
        DB::table('respuestas')->insert(['respuesta' => "Nombres de archivos", 'pregunta_id' => 25]);
        DB::table('respuestas')->insert(['respuesta' => "Contraseñas", 'pregunta_id' => 25]);
        DB::table('respuestas')->insert(['respuesta' => "Cualquier cadena de texto", 'pregunta_id' => 25]);
        DB::table('respuestas')->insert(['respuesta' => "Todas son correctas", 'pregunta_id' => 25]);
        DB::table('respuestas')->insert(['respuesta' => "exec()", 'pregunta_id' => 26]);
        DB::table('respuestas')->insert(['respuesta' => "system()", 'pregunta_id' => 26]);
        DB::table('respuestas')->insert(['respuesta' => "shell_exec()", 'pregunta_id' => 26]);
        DB::table('respuestas')->insert(['respuesta' => "Todas podrian usarse para tal fin", 'pregunta_id' => 26]);
        DB::table('respuestas')->insert(['respuesta' => "No se puede usar esta instrucción como tal", 'pregunta_id' => 27]);
        DB::table('respuestas')->insert(['respuesta' => "La inclusion de una URL con un script malicioso en otro servidor", 'pregunta_id' => 27]);
        DB::table('respuestas')->insert(['respuesta' => "La inclusion de una libreria interna", 'pregunta_id' => 27]);
        DB::table('respuestas')->insert(['respuesta' => "Las opciones B y C son correctas", 'pregunta_id' => 27]);
        DB::table('respuestas')->insert(['respuesta' => "Listas blancas", 'pregunta_id' => 28]);
        DB::table('respuestas')->insert(['respuesta' => "Listas negras", 'pregunta_id' => 28]);
        DB::table('respuestas')->insert(['respuesta' => "Expresiones regulares", 'pregunta_id' => 28]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las opciones son correctas", 'pregunta_id' => 28]);
        DB::table('respuestas')->insert(['respuesta' => "echo \"Hola mundo\"", 'pregunta_id' => 29]);
        DB::table('respuestas')->insert(['respuesta' => "out.print(\"hola mundo\");", 'pregunta_id' => 29]);
        DB::table('respuestas')->insert(['respuesta' => "thread.sleep(5000);", 'pregunta_id' => 29]);
        DB::table('respuestas')->insert(['respuesta' => "System.Threading.Thread.Sleep(5000)", 'pregunta_id' => 29]);
        DB::table('respuestas')->insert(['respuesta' => "eval()", 'pregunta_id' => 30]);
        DB::table('respuestas')->insert(['respuesta' => "exec()", 'pregunta_id' => 30]);
        DB::table('respuestas')->insert(['respuesta' => "system()", 'pregunta_id' => 30]);
        DB::table('respuestas')->insert(['respuesta' => "Todas ellas deben evitarse", 'pregunta_id' => 30]);

        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque a una aplicación web que permite a un atacante insertar sentencias SQL maliciosas en la aplicación web", 'pregunta_id' => 31]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante inyectar y ejecutar comandos directamente en el sistema operativo en el que se ejecuta tu aplicación.", 'pregunta_id' => 31]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante insertar scripts o secuencias de código malicioso en el navegador web de un usuario.", 'pregunta_id' => 31]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre en aplicaciones web y le permite a un atacante inducir a los usuarios a realizar acciones que no pretenden realizar", 'pregunta_id' => 31]);
        DB::table('respuestas')->insert(['respuesta' => "En el lado del cliente", 'pregunta_id' => 32]);
        DB::table('respuestas')->insert(['respuesta' => "En el lado del servidor", 'pregunta_id' => 32]);
        DB::table('respuestas')->insert(['respuesta' => "En ambos lados", 'pregunta_id' => 32]);
        DB::table('respuestas')->insert(['respuesta' => "En niguno de ellos", 'pregunta_id' => 32]);
        DB::table('respuestas')->insert(['respuesta' => "Phising", 'pregunta_id' => 33]);
        DB::table('respuestas')->insert(['respuesta' => "Robo de sesiones", 'pregunta_id' => 33]);
        DB::table('respuestas')->insert(['respuesta' => "Acceso al equipo del usuario", 'pregunta_id' => 33]);
        DB::table('respuestas')->insert(['respuesta' => "Todas ellas son posibles", 'pregunta_id' => 33]);
        DB::table('respuestas')->insert(['respuesta' => "Es facil de explotar", 'pregunta_id' => 34]);
        DB::table('respuestas')->insert(['respuesta' => "Es facil de distribuir", 'pregunta_id' => 34]);
        DB::table('respuestas')->insert(['respuesta' => "Es facil de ocultar", 'pregunta_id' => 34]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las respuestas son correctas", 'pregunta_id' => 34]);
        DB::table('respuestas')->insert(['respuesta' => "THC Hydra", 'pregunta_id' => 35]);
        DB::table('respuestas')->insert(['respuesta' => "BeEF", 'pregunta_id' => 35]);
        DB::table('respuestas')->insert(['respuesta' => "Maltego", 'pregunta_id' => 35]);
        DB::table('respuestas')->insert(['respuesta' => "Nmap", 'pregunta_id' => 35]);
        DB::table('respuestas')->insert(['respuesta' => "Reflected XSS", 'pregunta_id' => 36]);
        DB::table('respuestas')->insert(['respuesta' => "Stored XSS", 'pregunta_id' => 36]);
        DB::table('respuestas')->insert(['respuesta' => "Direct XSS", 'pregunta_id' => 36]);
        DB::table('respuestas')->insert(['respuesta' => "DOM Based XSS", 'pregunta_id' => 36]);
        DB::table('respuestas')->insert(['respuesta' => "Ver si la aplicación codifica o no los caracteres: >, <, “, ‘", 'pregunta_id' => 37]);
        DB::table('respuestas')->insert(['respuesta' => "Ver si la aplicación filtra palabras reservadas como “script”", 'pregunta_id' => 37]);
        DB::table('respuestas')->insert(['respuesta' => "Identificar rápidamente si el código inyectado es devuelto en la respuesta, ya que basta con buscar la cadena “aaaaaa” en la respuesta", 'pregunta_id' => 37]);
        DB::table('respuestas')->insert(['respuesta' => "El scrip permite averiguar todo lo anterior", 'pregunta_id' => 37]);
        DB::table('respuestas')->insert(['respuesta' => "Como parte del valor de una etiqueta HTML", 'pregunta_id' => 38]);
        DB::table('respuestas')->insert(['respuesta' => "Como el valor de un atributo de una etiqueta HTML", 'pregunta_id' => 38]);
        DB::table('respuestas')->insert(['respuesta' => "Como el nombre de un atributo de una etiqueta HTML", 'pregunta_id' => 38]);
        DB::table('respuestas')->insert(['respuesta' => "En todas ellas", 'pregunta_id' => 38]);
        DB::table('respuestas')->insert(['respuesta' => "Dentro de un comentario HTML", 'pregunta_id' => 39]);
        DB::table('respuestas')->insert(['respuesta' => "Dentro de una etiqueta STYLE", 'pregunta_id' => 39]);
        DB::table('respuestas')->insert(['respuesta' => "Dentro de una etiqueta SCRIPT", 'pregunta_id' => 39]);
        DB::table('respuestas')->insert(['respuesta' => "En todas ellas", 'pregunta_id' => 39]);
        DB::table('respuestas')->insert(['respuesta' => "Blade", 'pregunta_id' => 40]);
        DB::table('respuestas')->insert(['respuesta' => "Jetstream", 'pregunta_id' => 40]);
        DB::table('respuestas')->insert(['respuesta' => "Eloquent", 'pregunta_id' => 40]);
        DB::table('respuestas')->insert(['respuesta' => "Larvel no previene para nada el XSS", 'pregunta_id' => 40]);

        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque a una aplicación web que permite a un atacante insertar sentencias SQL maliciosas en la aplicación web", 'pregunta_id' => 41]);
        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque que permite al atacante inyectar código fuente en la aplicación de forma que es interpretado y ejecutado.", 'pregunta_id' => 41]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre en aplicaciones web y le permite a un atacante inducir a los usuarios a realizar acciones que no pretenden realizar", 'pregunta_id' => 41]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante insertar scripts o secuencias de código malicioso en el navegador web de un usuario.", 'pregunta_id' => 41]);
        DB::table('respuestas')->insert(['respuesta' => "Una víctima", 'pregunta_id' => 42]);
        DB::table('respuestas')->insert(['respuesta' => "Un sitio web vulnerable", 'pregunta_id' => 42]);
        DB::table('respuestas')->insert(['respuesta' => "Una sesión abierta (de la víctima) en el sitio web vulnerable", 'pregunta_id' => 42]);
        DB::table('respuestas')->insert(['respuesta' => "Los tres elementos anteriores", 'pregunta_id' => 42]);
        DB::table('respuestas')->insert(['respuesta' => "Porque no se verifica que el usuario tenga sesion iniciada", 'pregunta_id' => 43]);
        DB::table('respuestas')->insert(['respuesta' => "Porque se verifica que el usuario tenga sesion iniciada pero no que la peticion la haya solicitado el usuario", 'pregunta_id' => 43]);
        DB::table('respuestas')->insert(['respuesta' => "Porque el usuario no cambia la contraseña a menudo", 'pregunta_id' => 43]);
        DB::table('respuestas')->insert(['respuesta' => "Porque el navegador del cliente no esta actualizado", 'pregunta_id' => 43]);
        DB::table('respuestas')->insert(['respuesta' => "Integridad", 'pregunta_id' => 44]);
        DB::table('respuestas')->insert(['respuesta' => "Disponibilidad", 'pregunta_id' => 44]);
        DB::table('respuestas')->insert(['respuesta' => "Confidencialidad", 'pregunta_id' => 44]);
        DB::table('respuestas')->insert(['respuesta' => "No afecta a ninguna", 'pregunta_id' => 44]);
        DB::table('respuestas')->insert(['respuesta' => "El uso de cookies", 'pregunta_id' => 45]);
        DB::table('respuestas')->insert(['respuesta' => "El uso de token", 'pregunta_id' => 45]);
        DB::table('respuestas')->insert(['respuesta' => "Usar peticiones GET", 'pregunta_id' => 45]);
        DB::table('respuestas')->insert(['respuesta' => "Usar peticiones POST", 'pregunta_id' => 45]);
        DB::table('respuestas')->insert(['respuesta' => "Obliga a usar cookies de sesion", 'pregunta_id' => 46]);
        DB::table('respuestas')->insert(['respuesta' => "Obliga a usar un token CSRF en cada formulario que define", 'pregunta_id' => 46]);
        DB::table('respuestas')->insert(['respuesta' => "Obliga a proteger los parametros", 'pregunta_id' => 46]);
        DB::table('respuestas')->insert(['respuesta' => "Obliga a hacer peticiones post en todos los formularios", 'pregunta_id' => 46]);
        DB::table('respuestas')->insert(['respuesta' => "Usar el navegador en modo incognito", 'pregunta_id' => 47]);
        DB::table('respuestas')->insert(['respuesta' => "Cerrar sesion tras acabar de usar la aplicación", 'pregunta_id' => 47]);
        DB::table('respuestas')->insert(['respuesta' => "No usar las funcionalidades de las paginas web que permiten mantener la sesion abierta o recordar sesion", 'pregunta_id' => 47]);
        DB::table('respuestas')->insert(['respuesta' => "Borrar el historial de navegacion", 'pregunta_id' => 47]);
        DB::table('respuestas')->insert(['respuesta' => "Repitiendo la misma peticion a un servicio web, manteniendo cabecera y cookie", 'pregunta_id' => 48]);
        DB::table('respuestas')->insert(['respuesta' => "Repitiendo la misma peticion a un servicio web sin el uso de cookie", 'pregunta_id' => 48]);
        DB::table('respuestas')->insert(['respuesta' => "Haciendo peticiones aleatorias a un servicio web hasta que responda correctamente", 'pregunta_id' => 48]);
        DB::table('respuestas')->insert(['respuesta' => "Ninguna de las anteriores rspuestas es correcta", 'pregunta_id' => 48]);
        DB::table('respuestas')->insert(['respuesta' => "Cambiar la contraseña cada 60 dias", 'pregunta_id' => 49]);
        DB::table('respuestas')->insert(['respuesta' => "Hacer uso de autenticacion de doble factor para realizar operaciones sensibles", 'pregunta_id' => 49]);
        DB::table('respuestas')->insert(['respuesta' => "Añadir cookies permanetes a la sesion", 'pregunta_id' => 49]);
        DB::table('respuestas')->insert(['respuesta' => "Ninguna de las respuestas anteriores ofrece seguridad adicional", 'pregunta_id' => 49]);
        DB::table('respuestas')->insert(['respuesta' => "Usar el atributo src de las etiquetas img, script e iframe", 'pregunta_id' => 50]);
        DB::table('respuestas')->insert(['respuesta' => "Usar el atributo value en una etiquta de tipo div", 'pregunta_id' => 50]);
        DB::table('respuestas')->insert(['respuesta' => "Usar codigo JavaScript para hacer ataques a paginas con parametros de tipo POST", 'pregunta_id' => 50]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las anteriores son correctas", 'pregunta_id' => 50]);

        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque a una aplicación web que permite a un atacante insertar sentencias SQL maliciosas en la aplicación web", 'pregunta_id' => 51]);
        DB::table('respuestas')->insert(['respuesta' => "Es una vulnerabilidad que permite a un atacante inyectar y ejecutar comandos directamente en el sistema operativo en el que se ejecuta tu aplicación.", 'pregunta_id' => 51]);
        DB::table('respuestas')->insert(['respuesta' => "Es un tipo de ataque que permite al atacante inyectar código fuente en la aplicación de forma que es interpretado y ejecutado.", 'pregunta_id' => 51]);
        DB::table('respuestas')->insert(['respuesta' => "Ocurre cuando el atacante emplea determinadas técnicas para probar combinaciones de contraseñas con el objetivo de descubrir las credenciales de una potencial víctima y así lograr acceso a una cuenta o sistema.", 'pregunta_id' => 51]);
        DB::table('respuestas')->insert(['respuesta' => "Poner un limite de intentos antes de bloquear la cuenta", 'pregunta_id' => 52]);
        DB::table('respuestas')->insert(['respuesta' => "Implantar el uso de un CAPTCHA", 'pregunta_id' => 52]);
        DB::table('respuestas')->insert(['respuesta' => "Autenticacion de doble factor", 'pregunta_id' => 52]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las respuestas son correctas", 'pregunta_id' => 52]);
        DB::table('respuestas')->insert(['respuesta' => "Un diccionario de palabras", 'pregunta_id' => 53]);
        DB::table('respuestas')->insert(['respuesta' => "Un desencriptador de contraseñas", 'pregunta_id' => 53]);
        DB::table('respuestas')->insert(['respuesta' => "Una librería de encriptacion", 'pregunta_id' => 53]);
        DB::table('respuestas')->insert(['respuesta' => "Ninguna de las anteriores", 'pregunta_id' => 53]);
        DB::table('respuestas')->insert(['respuesta' => "Medusa", 'pregunta_id' => 54]);
        DB::table('respuestas')->insert(['respuesta' => "THC Hydra", 'pregunta_id' => 54]);
        DB::table('respuestas')->insert(['respuesta' => "John The Ripper", 'pregunta_id' => 54]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las anteriores", 'pregunta_id' => 54]);
        DB::table('respuestas')->insert(['respuesta' => "CPU", 'pregunta_id' => 55]);
        DB::table('respuestas')->insert(['respuesta' => "GPU", 'pregunta_id' => 55]);
        DB::table('respuestas')->insert(['respuesta' => "RAM", 'pregunta_id' => 55]);
        DB::table('respuestas')->insert(['respuesta' => "HDD", 'pregunta_id' => 55]);
        DB::table('respuestas')->insert(['respuesta' => "Añadir un minimo de caracteres alto", 'pregunta_id' => 56]);
        DB::table('respuestas')->insert(['respuesta' => "Que incluya mayusculas, minisculas y numeros", 'pregunta_id' => 56]);
        DB::table('respuestas')->insert(['respuesta' => "Que incluya caracteres especiales", 'pregunta_id' => 56]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las anteriores juntas", 'pregunta_id' => 56]);
        DB::table('respuestas')->insert(['respuesta' => "Encriptar las contraseñas", 'pregunta_id' => 57]);
        DB::table('respuestas')->insert(['respuesta' => "Añadir sal a los hash de contraseña", 'pregunta_id' => 57]);
        DB::table('respuestas')->insert(['respuesta' => "Bloquear cuenta tras un numero de intentos", 'pregunta_id' => 57]);
        DB::table('respuestas')->insert(['respuesta' => "Todas las anteriores son validas", 'pregunta_id' => 57]);
        DB::table('respuestas')->insert(['respuesta' => "Ataque de diccionario", 'pregunta_id' => 58]);
        DB::table('respuestas')->insert(['respuesta' => "Fuerza bruta inversa", 'pregunta_id' => 58]);
        DB::table('respuestas')->insert(['respuesta' => "Credential Stuffing", 'pregunta_id' => 58]);
        DB::table('respuestas')->insert(['respuesta' => "Todos los anteriores son ataques de fuerza bruta", 'pregunta_id' => 58]);
        DB::table('respuestas')->insert(['respuesta' => "Eloquent", 'pregunta_id' => 59]);
        DB::table('respuestas')->insert(['respuesta' => "Fortify + Sanctum", 'pregunta_id' => 59]);
        DB::table('respuestas')->insert(['respuesta' => "Composer", 'pregunta_id' => 59]);
        DB::table('respuestas')->insert(['respuesta' => "Mix", 'pregunta_id' => 59]);
        DB::table('respuestas')->insert(['respuesta' => "Patator", 'pregunta_id' => 60]);
        DB::table('respuestas')->insert(['respuesta' => "Ncrack", 'pregunta_id' => 60]);
        DB::table('respuestas')->insert(['respuesta' => "Nikto", 'pregunta_id' => 60]);
        DB::table('respuestas')->insert(['respuesta' => "nmap", 'pregunta_id' => 60]);

        //usuarios
        DB::table('users')->insert(['name' => "John Smith", 'email' => "johnsmith@plataformactf.es", 'password' => Hash::make('chocolate')]);
        DB::table('users')->insert(['name' => "Jane Doe", 'email' => "janedoe@plataformactf.es", 'password' => Hash::make('i-love-you')]);
        DB::table('users')->insert(['name' => "Administrador", 'email' => "administrador@plataformactf.es", 'password' => Hash::make('password!')]);

        //retos
        DB::table('retos')->insert(['nombre' => 'Inyección de SQL en un GET','descripcion' => 'En este reto se propone al usuario realizar una inyección de SQL en una web que utiliza un formulario para, a través del método get, realizar una acción que devuelva cierta información. Se le solicita al usuario que para resolver el reto logre descubrir el nombre de la base de datos.','categoria' => 'Inyección de SQL','enlace' => 'http://ctf.test/retos/sqli/reto1','flag' => 'ctf']);
        DB::table('retos')->insert(['nombre' => 'Inyección de SQL en un POST','descripcion' => 'En este reto se propone al usuario realizar una inyección de SQL en una web que utiliza un formulario para, a través del método post, realizar una acción que devuelva cierta información. Se le solicita al usuario que para resolver el reto logre descubrir el nombre de usuario que ejecuta la base de datos.','categoria' => 'Inyección de SQL','enlace' => 'http://ctf.test/retos/sqli/reto2','flag' => 'forge']);
        DB::table('retos')->insert(['nombre' => 'Inyección de SQL ciega','descripcion' => 'En este reto se propone al usuario realizar una inyección de SQL en una web que solo dice si un valor existe o no. Se le solicita al usuario que para resolver el reto logre descubrir el hash del usuario que ejecuta la base de datos.','categoria' => 'Inyección de SQL','enlace' => 'http://ctf.test/retos/sqli/reto3','flag' => '*00D7703EF02820983325BC03CC15D914B90FD341']);
        DB::table('retos')->insert(['nombre' => 'Inyección de SQL ciega con token','descripcion' => 'En este reto se propone al usuario realizar una inyección de SQL en una web que no devuelve ningun tipo de informacion visible. Se le solicita al usuario que para resolver el reto introduzca la pregunta con id 21 que se encuentra en la tabla preguntas','categoria' => 'Inyección de SQL','enlace' => 'http://ctf.test/retos/sqli/reto4','flag' => '¿Qué es una inyección de código?']);
        DB::table('retos')->insert(['nombre' => 'Fuerza bruta básico','descripcion' => 'En este reto se le propone al usuario realizar un ataque de fuerza bruta sobre un formulario de log in de tipo GET. Se le solicita obtener la contraseña del usuario johnsmith@plataformactf.es','categoria' => 'Fuerza bruta','enlace' => 'https://plataformactf.es/retos/fuerzabruta/reto1','flag' => 'chocolate']);
        DB::table('retos')->insert(['nombre' => 'Fuerza bruta con Token','descripcion' => 'En este reto se le propone al usuario realizar un ataque de fuerza bruta sobre un formulario de log in de tipo POST con un token protegiendo el acceso. Se le solicita obtener la contraseña del usuario administrador@plataformactf.es','categoria' => 'Fuerza bruta','enlace' => 'https://plataformactf.es/retos/fuerzabruta/reto2','flag' => 'password!']);
        DB::table('retos')->insert(['nombre' => 'Inyección de comandos básica','descripcion' => 'En este reto se propone al usuario realizar una inyección de Comandos de sistema en un formulario de tipo get sin ninguna clase de protección. Se le solicita al usuario que para resolver el reto logre descubrir el nombre del usuario que ejecuta el servicio web.','categoria' => 'Inyección de Comandos','enlace' => 'https://plataformactf.es/retos/comandos/reto1','flag' => 'forge']);
        DB::table('retos')->insert(['nombre' => 'Inyectando comandos en un nombre de fichero','descripcion' => 'En este reto se propone al usuario realizar una inyección de Comandos de sistema en un formulario de tipo post sin campo input al que atacar. Se le solicita al usuario que para resolver el reto logre descubrir la ruta local en la que se encuentra el proyecto web en el servidor.','categoria' => 'Inyección de Comandos','enlace' => 'https://plataformactf.es/retos/comandos/reto2','flag' => '/home/forge/plataformactf.es/public']);
        DB::table('retos')->insert(['nombre' => 'Inyección de código básica','descripcion' => 'En este reto se propone al usuario realizar una inyección de código HTML en un formulario de tipo get en el que podemos imprimir en pantalla un texto que escribamos. Se le solicita al usuario que para resolver el reto logre descubrir la version de PHP que ejecuta el servidor.','categoria' => 'Inyección de Código','enlace' => 'https://plataformactf.es/retos/codigo/reto1','flag' => '8.1.8']);
        DB::table('retos')->insert(['nombre' => 'Inyectando código en etiquetas HTML','descripcion' => 'En este reto se propone al usuario realizar una inyección de código HTML en un formulario de tipo POST en el que nos dan a elegir el estilo. Se le solicita al usuario que para resolver el reto logre descubrir la contraseña de la base de datos, haciendo uso de phpinfo().','categoria' => 'Inyección de Código','enlace' => 'https://plataformactf.es/retos/codigo/reto2','flag' => '00000000']);
        DB::table('retos')->insert(['nombre' => 'XSS básica','descripcion' => 'En este reto se le propone al usuario realizar un ataque XSS sobre un formulario de tipo get en el que se le permite escribir un texto que se imprimirá en pantalla. Se le solicita al usuario que sea capaz de lanzar una ventana de alerta y obtenga el flag resultante','categoria' => 'XSS','enlace' => 'https://plataformactf.es/retos/xss/reto1','flag' => 'Clodd']);
        DB::table('retos')->insert(['nombre' => 'XSS en mensaje almacenado','descripcion' => 'En este reto se le propone al usuario realizar un ataque XSS sobre un formulario tipo post en el que se almacenará un texto que se imprimirá la proxima vez que se cargue la vista. Se le solicita al usuario que sea capaz de lanzar una ventana de alerta y obtenga el flag resultante','categoria' => 'XSS','enlace' => 'https://plataformactf.es/retos/xss/reto2','flag' => 'Pegasus']);
        DB::table('retos')->insert(['nombre' => 'XSS en mensaje almacenado con script desinfectado','descripcion' => 'En este reto se le propone al usuario realizar un ataque XSS sobre un formulario tipo post en el que se almacenará un texto que se imprimirá la proxima vez que se cargue la vista. Se le solicita al usuario que sea capaz de lanzar una ventana de alerta, estando totalmente desinfectada cualquier secuencia de caracteres, incluidos los espacios, que presente el orden "< s c r i p t" , y obtenga el flag resultante','categoria' => 'XSS','enlace' => 'https://plataformactf.es/retos/xss/reto3','flag' => 'Cerberus']);
        DB::table('retos')->insert(['nombre' => 'CSRF local','descripcion' => 'En este reto se le propone al usuario atacar un formulario de cambio de contraseña que es vulnerable a ataques CSRF en local, debe usar otro reto para poder atacar y conseguir superar este. Se le solicita al usuario que logre encontrar el flag oculto en la página del reto que solo será visible si se logra atacar desde otra página.','categoria' => 'CSRF','enlace' => 'https://plataformactf.es/retos/csrf/reto1','flag' => 'Draconis']);


    }
}
