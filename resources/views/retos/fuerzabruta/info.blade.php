<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-xl sm:rounded-lg">
                <div class="p-6 sm:px-20 bg-white border-b border-gray-200">
                    <div class="mt-8 text-2xl">
                        Fuerza Bruta
                    </div>

                    <div class="mt-6 text-gray-500">
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Un ataque de fuerza bruta es un tipo de ataque que tiene como objetivo el descubrir una contrase&ntilde;a, un nombre de usuario, una p&aacute;gina web oculta o una clave de cifrado. El m&eacute;todo utilizado para esto consiste en aplicar multitud de alternativas hasta encontrar con una que resulte correcta. Principalmente se usa para descubrir contrase&ntilde;as y claves de cifrado, las otras dos opciones son mucho menos usadas.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Dependiendo del tama&ntilde;o y la complejidad de la contrase&ntilde;a, este proceso puede tardar desde solo unos segundos, hasta varios cientos de miles de a&ntilde;os. Cuantos m&aacute;s caracteres distintos hay para elegir en cada car&aacute;cter de la contrase&ntilde;a, m&aacute;s compleja es esta y por tanto m&aacute;s opciones hay que probar por cada car&aacute;cter a descubrir, pero cuanto m&aacute;s larga es la contrase&ntilde;a, la complejidad para descubrir dicha contrase&ntilde;a aumenta de manera exponencial al n&uacute;mero de caracteres de longitud que tiene dicha contrase&ntilde;a. Esto hace pensar que ser&iacute;a muy seguro hacer una contrase&ntilde;a o un hash de encriptaci&oacute;n de muchos miles de caracteres, pero hay que tener en cuenta que, por un lado, recordar una contrase&ntilde;a de usuario de muchos caracteres es muy dif&iacute;cil si no se guarda en un sitio, lo cual hace que se reduzca inmediatamente la fiabilidad de dicha contrase&ntilde;a; o, si se usa una clave de encriptado de muchos miles de caracteres tenemos el problema del rendimiento para poder encriptar y desencriptar dichas contrase&ntilde;as o encontrar n&uacute;meros primos (en lo cual est&aacute; basado en su mayor&iacute;a el sistema criptogr&aacute;fico actual) con los suficientes caracteres como para poder hacer viable el sistema.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Para poder resolver el problema de encontrar una contrase&ntilde;a o clave de desencriptado si tener que introducir una a una todas las palabras que se nos ocurran, se han creado herramientas para agilizar dicha tarea.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>La m&aacute;s b&aacute;sica de estas herramientas es el diccionario de palabras. Esto es uno o varios ficheros con cientos de miles o incluso millones de palabras que alguien que intente descubrir la contrase&ntilde;a asociada a un usuario utilizar&aacute; en un ataque contra un formulario en el que, en combinaci&oacute;n de un nombre de usuario, intentar&aacute; todas las combinaciones posibles hasta dar con la correcta combinaci&oacute;n. A esto se le denomina <u>Ataques de diccionario</u>.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Existen una gran cantidad de aplicaciones que permiten automatizar el proceso de ataque de fuerza bruta, algunas de ellas son Medusa, THC Hydra, Brutus, John The Ripper, Rainbow. Muchas de ellas las podemos encontrar en distribuciones de Linux especialmente preparadas para hacer pruebas de penetraci&oacute;n. Estas herramientas se ejecutan contra alguno de los protocolos m&aacute;s utilizado en internet como FTP, MySQL, Telnet o sobre una misma p&aacute;gina web.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Existe una &uacute;ltima herramienta muy especializada llamada tablas Rainbow y que no es m&aacute;s que unos ficheros enormes en los que se han ido calculando previamente salidas para determinadas entradas a las m&aacute;s famosas funciones de hash, para de esta forma, si ya existe pre calculado un hash y se sabe que pertenece a una determinada palabra, ya tendr&iacute;amos desencriptada esa palabra sin tener que usar la fuerza bruta. El motivo de que esta herramienta est&eacute; aqu&iacute; mencionada es que las tabla se crea precisamente por fuerza bruta, calculando el hash de tas las posibles combinaciones de letras, n&uacute;meros y caracteres especiales para una determinada funci&oacute;n.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>En la actualidad existe tal complejidad de contrase&ntilde;as y de encriptado de estas que el uso de solamente la CPU ya no es suficiente para los c&aacute;lculos, por lo que actualmente se est&aacute; usando la potencia matem&aacute;tica que ofrecen los miles de peque&ntilde;os n&uacute;cleos matem&aacute;ticos que incluyen lo chips gr&aacute;ficos GPU para multiplicar por m&aacute;s de 200 el rendimiento de una &uacute;nica CPU y poder descifrar mucho m&aacute;s r&aacute;pido. Eso unido a la capacidad de poner varias maquina en paralelo a trabajar, hace que cualquier ataque en la actualidad sea factible, solo es cuesti&oacute;n de potencia y de tiempo, aunque puede que este &uacute;ltimo sea mayor que el que estamos dispuestos a esperar.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>&nbsp;</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>&iquest;Como se pueden evitar este tipo de ataques? La respuesta principal es una buena concienciaci&oacute;n de los usuarios a la hora de elegir sus contrase&ntilde;as, deben ser largas y lo suficientemente complejas, es m&aacute;s que suficiente entre 10 y 12 caracteres que incluyan n&uacute;meros, letras may&uacute;sculas y min&uacute;sculas y alg&uacute;n s&iacute;mbolo especial. Esto puede hacer que el descifrar esta contrase&ntilde;a por una &uacute;nica m&aacute;quina, aun usando una GPU pueda tardar m&aacute;s de 100 a&ntilde;os en ser desencriptada.&nbsp;</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Por otro lado, los administradores y programadores deben tambi&eacute;n poner de su parte, obligar al sistema a usar este tipo de contrase&ntilde;as e imponer una pol&iacute;tica de intentos antes de bloquear la cuenta o de obligar al usuario a demostrar que es una persona a trav&eacute;s del uso que un CAPTCHA, que es un sistema de pregunta y respuesta que pretende simular un test para identificar si el usuario es humano. Otro m&eacute;todo que pueden usar los administradores es guardar las contrase&ntilde;as encriptadas y si quieres evitar el uso de tablas Rainbow, tambi&eacute;n pueden aplicar un sal al has, que no es m&aacute;s que a&ntilde;adir una cadena de texto predeterminada por el sistema a todas las contrase&ntilde;as antes de calcular el hash.</span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'><br></span></p>
                        <p style='margin: 3pt 0cm 0cm; text-align: justify; line-height: 1.5; font-family: "Times New Roman", serif;'><span style='font-family: "Times New Roman", Times, serif; font-size: 18px;'>Por su parte Laravel incluye para evitar este tipo de ataques a dos herramientas que trabajan en conjunto. Por un lado, tenemos a <u>Laravel Fortify</u>, una implementaci&oacute;n de backend de autenticaci&oacute;n agn&oacute;stica de frontend para Laravel. Fortify registra las rutas y los controladores necesarios para implementar todas las funciones de autenticaci&oacute;n de Laravel, incluido el inicio de sesi&oacute;n, el registro, el restablecimiento de contrase&ntilde;a, la verificaci&oacute;n de correo electr&oacute;nico y m&aacute;s. Por otro lado, tenemos a Laravel Sanctum que se ocupa de administrar tokens de API y autenticar a los usuarios existentes mediante tokens o cookies de sesi&oacute;n.</span></p>
                    </div>
                    <a href="{{ url()->previous() }}" class="mt-2 ml-12 inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition'">Volver</a>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
